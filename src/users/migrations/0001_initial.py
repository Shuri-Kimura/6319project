# Generated by Django 3.2.7 on 2021-11-03 08:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.RegexValidator('^[a-zA-Z0-9]*$')], verbose_name='username')),
                ('student_number', models.CharField(max_length=7, unique=True, validators=[django.core.validators.MinLengthValidator(7), django.core.validators.RegexValidator('^[A-Z0-9]*$')], verbose_name='学籍番号')),
                ('email', models.EmailField(max_length=50, verbose_name='Email')),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/', verbose_name='プロフィール画像')),
                ('user_comment', models.TextField(blank=True, max_length=300, null=True, verbose_name='自己紹介')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('class_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField(max_length=50)),
                ('teacher', models.TextField(max_length=20)),
                ('faculty', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('department', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(35)])),
                ('method_eval', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('classform', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('contents', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Texts',
            fields=[
                ('text_id', models.IntegerField(primary_key=True, serialize=False)),
                ('info', models.TextField(max_length=300)),
                ('sold_flag', models.BooleanField()),
                ('category', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('state', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('days', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.classes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Uevals',
            fields=[
                ('ueval_id', models.IntegerField(primary_key=True, serialize=False)),
                ('eval', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tfavos',
            fields=[
                ('tfavo_id', models.IntegerField(primary_key=True, serialize=False)),
                ('text_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.texts')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tcom',
            fields=[
                ('tcom_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.TextField(max_length=100)),
                ('text_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.texts')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField(max_length=30)),
                ('messages', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cfavos',
            fields=[
                ('cfavo_id', models.IntegerField(primary_key=True, serialize=False)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.classes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cevals',
            fields=[
                ('ceval_id', models.IntegerField(primary_key=True, serialize=False)),
                ('rikai', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('raku', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.classes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ccom',
            fields=[
                ('ccom_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.TextField(max_length=100)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.classes')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
